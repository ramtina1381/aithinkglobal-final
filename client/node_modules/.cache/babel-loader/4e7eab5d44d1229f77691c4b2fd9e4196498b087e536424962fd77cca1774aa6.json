{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, signOut, reload, onAuthStateChanged } from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AuthForm() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  // Detect current user (session management)\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsub();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    if (isLogin) {\n      // Login mode\n      try {\n        await signInWithEmailAndPassword(auth, form.email, form.password);\n        setMessage(\"Logged in successfully!\");\n      } catch (err) {\n        setError(\"Invalid credentials. Please try again.\");\n      }\n    } else {\n      // Sign up mode\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n        await sendEmailVerification(userCredential.user);\n        setUser(userCredential.user);\n        setMessage(\"Verification email sent! Please check your email.\");\n        setCheckingVerification(true);\n\n        // Start polling for verification\n        const interval = setInterval(async () => {\n          await reload(userCredential.user);\n          if (userCredential.user.emailVerified) {\n            clearInterval(interval);\n\n            // Save user info in Firestore\n            await setDoc(doc(db, \"users\", userCredential.user.uid), {\n              firstName: form.firstName,\n              lastName: form.lastName,\n              email: userCredential.user.email,\n              createdAt: serverTimestamp()\n            });\n            setMessage(\"Email verified! Your account is now active.\");\n            setCheckingVerification(false);\n          }\n        }, 3000);\n      } catch (err) {\n        setError(\"This email is already registered or invalid.\");\n      }\n    }\n  };\n  const handleLogout = async () => {\n    await signOut(auth);\n    setMessage(\"You have been logged out.\");\n  };\n\n  // Determine if form is valid (no errors and inputs not empty)\n  const isFormValid = form.email && !emailError && form.password && !passwordError && (\n  // If sign up, also check first and last name:\n  isLogin || form.firstName && form.lastName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? \"Log in\" : \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          value: form.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          value: form.lastName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: e => {\n          const value = e.target.value;\n          setForm({\n            ...form,\n            email: value\n          });\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailRegex.test(value)) {\n            setError(\"Please enter a valid email address.\");\n          } else {\n            setError(\"\");\n          }\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: e => {\n          const value = e.target.value;\n          setForm({\n            ...form,\n            password: value\n          });\n          console.log(\"Password changed:\", value);\n          if (value.length < 6) {\n            setError(\"Password must be at least 6 characters long.\");\n          } else {\n            setError(\"\");\n          }\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${isLogin ? \"signup\" : \"login\"}`,\n          children: isLogin ? \"Create new user\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }, this), checkingVerification && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for email verification...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n// import { Form, Link, useSearchParams } from 'react-router-dom';\n\n// import classes from './AuthForm.module.css';\n\n// function AuthForm() {\n\n//   const [searchParams] = useSearchParams();\n//   const isLogin = searchParams.get('mode') === 'login';\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n//         <p>\n//           <label htmlFor=\"email\">Email</label>\n//           <input id=\"email\" type=\"email\" name=\"email\" required />\n//         </p>\n//         <p>\n//           <label htmlFor=\"image\">Password</label>\n//           <input id=\"password\" type=\"password\" name=\"password\" required />\n//         </p>\n//         <div className={classes.actions}>\n//           <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n//             {isLogin ? 'Create new user' : 'Login'}\n//           </Link>\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n_s(AuthForm, \"TQKbWuJfcOR0+0PwQcu6yraM7O0=\", false, function () {\n  return [useSearchParams];\n});\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","Link","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","reload","onAuthStateChanged","doc","setDoc","serverTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","searchParams","isLogin","get","form","setForm","firstName","lastName","email","password","message","setMessage","error","setError","user","setUser","checkingVerification","setCheckingVerification","unsub","currentUser","handleChange","e","target","name","value","handleSubmit","preventDefault","err","userCredential","interval","setInterval","emailVerified","clearInterval","uid","createdAt","handleLogout","isFormValid","emailError","passwordError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","required","emailRegex","test","console","log","length","to","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/AuthForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendEmailVerification,\n  signOut,\n  reload,\n  onAuthStateChanged\n} from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\n\nexport default function AuthForm() {\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n\n  const [form, setForm] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  // Detect current user (session management)\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n    return () => unsub();\n  }, []);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setError(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n\n    if (isLogin) {\n      // Login mode\n      try {\n        await signInWithEmailAndPassword(auth, form.email, form.password);\n        setMessage(\"Logged in successfully!\");\n      } catch (err) {\n        setError(\"Invalid credentials. Please try again.\");\n      }\n    } else {\n      // Sign up mode\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n        await sendEmailVerification(userCredential.user);\n        setUser(userCredential.user);\n\n        setMessage(\"Verification email sent! Please check your email.\");\n        setCheckingVerification(true);\n\n        // Start polling for verification\n        const interval = setInterval(async () => {\n          await reload(userCredential.user);\n          if (userCredential.user.emailVerified) {\n            clearInterval(interval);\n\n            // Save user info in Firestore\n            await setDoc(doc(db, \"users\", userCredential.user.uid), {\n              firstName: form.firstName,\n              lastName: form.lastName,\n              email: userCredential.user.email,\n              createdAt: serverTimestamp(),\n            });\n\n            setMessage(\"Email verified! Your account is now active.\");\n            setCheckingVerification(false);\n          }\n        }, 3000);\n      } catch (err) {\n        setError(\"This email is already registered or invalid.\");\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await signOut(auth);\n    setMessage(\"You have been logged out.\");\n  };\n\n    // Determine if form is valid (no errors and inputs not empty)\n  const isFormValid = \n    form.email && !emailError &&\n    form.password && !passwordError &&\n    // If sign up, also check first and last name:\n    (isLogin || (form.firstName && form.lastName));\n\n  return (\n    <div className=\"auth-container\">\n      {user ? (\n        <div>\n          <h2>Welcome, {user.email}</h2>\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <h2>{isLogin ? \"Log in\" : \"Create a new user\"}</h2>\n\n          {!isLogin && (\n            <>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={form.firstName}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={form.lastName}\n                onChange={handleChange}\n                required\n              />\n            </>\n          )}\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={form.email}\n            onChange={(e) => {\n              const value = e.target.value;\n              setForm({ ...form, email: value });\n\n              const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n              if (!emailRegex.test(value)) {\n                setError(\"Please enter a valid email address.\");\n              } else {\n                setError(\"\");\n              }\n            }}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={form.password}\n            onChange={(e) => {\n              const value = e.target.value;\n              setForm({ ...form, password: value });\n              console.log(\"Password changed:\", value);\n              if (value.length < 6) {\n                setError(\"Password must be at least 6 characters long.\");\n              } else {\n                setError(\"\");\n              }\n            }}\n            required\n          />\n\n          <div className=\"auth-actions\">\n            <Link to={`?mode=${isLogin ? \"signup\" : \"login\"}`}>\n              {isLogin ? \"Create new user\" : \"Login\"}\n            </Link>\n            <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\n          </div>\n        </form>\n      )}\n\n      {message && <p className=\"message\">{message}</p>}\n      {checkingVerification && <p>Waiting for email verification...</p>}\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n\n\n\n\n\n// import { Form, Link, useSearchParams } from 'react-router-dom';\n\n// import classes from './AuthForm.module.css';\n\n// function AuthForm() {\n\n//   const [searchParams] = useSearchParams();\n//   const isLogin = searchParams.get('mode') === 'login';\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n//         <p>\n//           <label htmlFor=\"email\">Email</label>\n//           <input id=\"email\" type=\"email\" name=\"email\" required />\n//         </p>\n//         <p>\n//           <label htmlFor=\"image\">Password</label>\n//           <input id=\"password\" type=\"password\" name=\"password\" required />\n//         </p>\n//         <div className={classes.actions}>\n//           <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n//             {isLogin ? 'Create new user' : 'Login'}\n//           </Link>\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}