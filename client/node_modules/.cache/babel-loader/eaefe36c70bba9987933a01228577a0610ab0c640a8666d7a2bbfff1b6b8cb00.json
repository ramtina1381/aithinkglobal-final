{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Header.css';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [mobileNavOpen, setMobileNavOpen] = useState(false);\n  const [headerScrolled, setHeaderScrolled] = useState(false);\n  const [user, setUser] = useState(null);\n  const location = useLocation(); // Hook to get current URL path\n  const headerRef = useRef(null); // Ref to access the header DOM element\n  const mobileNavToggleBtnRef = useRef(null); // Ref for the mobile nav toggle button\n\n  // ðŸ”¹ Listen for authentication state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleLogout = async () => {\n    await signOut(auth);\n    setUserRole(null);\n    setMessage(\"You have been logged out.\");\n  };\n\n  // --- Scroll-based 'scrolled' class on body ---\n  useEffect(() => {\n    const toggleScrolled = () => {\n      // Access the header through the ref\n      const selectHeader = headerRef.current;\n\n      // Ensure header exists and has relevant sticky classes\n      if (!selectHeader || !selectHeader.classList.contains('scroll-up-sticky') && !selectHeader.classList.contains('sticky-top') && !selectHeader.classList.contains('fixed-top')) {\n        return;\n      }\n\n      // Add/remove 'scrolled' class on the body based on scroll position\n      if (window.scrollY > 100) {\n        document.body.classList.add('scrolled');\n        setHeaderScrolled(true); // Also update React state for component's own class\n      } else {\n        document.body.classList.remove('scrolled');\n        setHeaderScrolled(false); // Also update React state\n      }\n    };\n    window.addEventListener('scroll', toggleScrolled);\n    window.addEventListener('load', toggleScrolled); // For initial load check\n\n    // Cleanup: remove event listeners when component unmounts\n    return () => {\n      window.removeEventListener('scroll', toggleScrolled);\n      window.removeEventListener('load', toggleScrolled);\n    };\n  }, []); // Empty dependency array means this runs once on mount\n\n  // --- Mobile Navigation Toggle ---\n  const toggleMobileNav = () => {\n    // Toggle the mobileNavOpen state\n    setMobileNavOpen(prev => !prev);\n  };\n\n  // Effect to apply/remove 'mobile-nav-active' class on body\n  useEffect(() => {\n    if (mobileNavOpen) {\n      document.body.classList.add('mobile-nav-active');\n      // If using bi-list and bi-x, ensure toggle button reflects state\n      if (mobileNavToggleBtnRef.current) {\n        mobileNavToggleBtnRef.current.classList.remove('bi-list');\n        mobileNavToggleBtnRef.current.classList.add('bi-x');\n      }\n    } else {\n      document.body.classList.remove('mobile-nav-active');\n      if (mobileNavToggleBtnRef.current) {\n        mobileNavToggleBtnRef.current.classList.remove('bi-x');\n        mobileNavToggleBtnRef.current.classList.add('bi-list');\n      }\n    }\n  }, [mobileNavOpen]); // Re-run when mobileNavOpen state changes\n\n  // --- Hide mobile nav on same-page/hash links (or any link click) ---\n  const closeMobileNav = () => {\n    if (mobileNavOpen) {\n      setMobileNavOpen(false); // Close the mobile nav\n    }\n  };\n\n  // --- Navmenu Scrollspy ---\n  useEffect(() => {\n    const navmenuScrollspy = () => {\n      // Select all nav links inside the navmenu\n      const navmenulinks = document.querySelectorAll('#navmenu a[href^=\"#\"]'); // Only target hash links\n\n      navmenulinks.forEach(navmenulink => {\n        const hash = navmenulink.hash;\n        if (!hash) return; // Skip links without a hash\n\n        const section = document.querySelector(hash);\n        if (!section) return; // Skip if section doesn't exist\n\n        const position = window.scrollY + 200; // Offset for header height\n\n        if (position >= section.offsetTop && position < section.offsetTop + section.offsetHeight) {\n          // If the section is in view, add 'active' class to its corresponding nav link\n          // First, remove 'active' from all other nav links\n          document.querySelectorAll('#navmenu a').forEach(link => {\n            if (link !== navmenulink) {\n              // Don't remove if it's the current active one\n              link.classList.remove('active');\n            }\n          });\n          navmenulink.classList.add('active');\n        } else {\n          // If the section is not in view, remove 'active' class\n          navmenulink.classList.remove('active');\n        }\n      });\n\n      // Special handling for the root path if no specific section is active\n      if (location.pathname === '/' && window.scrollY < 200) {\n        // Adjust value as needed\n        const homeLink = document.querySelector('.navmenu a[href=\"/\"]');\n        if (homeLink) {\n          document.querySelectorAll('.navmenu a').forEach(link => link.classList.remove('active'));\n          homeLink.classList.add('active');\n        }\n      }\n    };\n    window.addEventListener('load', navmenuScrollspy);\n    document.addEventListener('scroll', navmenuScrollspy);\n\n    // Cleanup: remove event listeners\n    return () => {\n      window.removeEventListener('load', navmenuScrollspy);\n      document.removeEventListener('scroll', navmenuScrollspy);\n    };\n  }, [location.pathname]); // Re-run if path changes (e.g., navigating directly)\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    ref: headerRef,\n    className: `header ${headerScrolled ? 'scrolled' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"logo\",\n        onClick: closeMobileNav,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/img/logo.png\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: `navmenu ${mobileNavOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: location.pathname === '/' ? 'active' : '',\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/contact\",\n              className: location.pathname === '/contact' ? 'active' : '',\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/profile\",\n                className: location.pathname === '/profile' ? 'active' : '',\n                children: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"logout-btn\",\n                onClick: handleLogout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/auth?mode=login\",\n              className: location.pathname === '/auth' ? 'active' : '',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          ref: mobileNavToggleBtnRef,\n          className: `mobile-nav-toggle ${mobileNavOpen ? 'open' : ''}`,\n          onClick: toggleMobileNav,\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"JtU0RZsu7MCd11cNhNpw6B9NEH8=\", false, function () {\n  return [useLocation];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useLocation","onAuthStateChanged","signOut","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","mobileNavOpen","setMobileNavOpen","headerScrolled","setHeaderScrolled","user","setUser","location","headerRef","mobileNavToggleBtnRef","unsubscribe","currentUser","handleLogout","setUserRole","setMessage","toggleScrolled","selectHeader","current","classList","contains","window","scrollY","document","body","add","remove","addEventListener","removeEventListener","toggleMobileNav","prev","closeMobileNav","navmenuScrollspy","navmenulinks","querySelectorAll","forEach","navmenulink","hash","section","querySelector","position","offsetTop","offsetHeight","link","pathname","homeLink","ref","className","children","to","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/Header.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Header.css';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth } from \"./firebase\";\n\nexport default function Header() {\n  const [mobileNavOpen, setMobileNavOpen] = useState(false);\n  const [headerScrolled, setHeaderScrolled] = useState(false);\n  const [user, setUser] = useState(null);\n  const location = useLocation(); // Hook to get current URL path\n  const headerRef = useRef(null); // Ref to access the header DOM element\n  const mobileNavToggleBtnRef = useRef(null); // Ref for the mobile nav toggle button\n\n\n    // ðŸ”¹ Listen for authentication state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n\nconst handleLogout = async () => {\n    await signOut(auth);\n    setUserRole(null);\n    setMessage(\"You have been logged out.\");\n  };\n\n\n  // --- Scroll-based 'scrolled' class on body ---\n  useEffect(() => {\n    const toggleScrolled = () => {\n      // Access the header through the ref\n      const selectHeader = headerRef.current;\n\n      // Ensure header exists and has relevant sticky classes\n      if (!selectHeader || (!selectHeader.classList.contains('scroll-up-sticky') && !selectHeader.classList.contains('sticky-top') && !selectHeader.classList.contains('fixed-top'))) {\n        return;\n      }\n\n      // Add/remove 'scrolled' class on the body based on scroll position\n      if (window.scrollY > 100) {\n        document.body.classList.add('scrolled');\n        setHeaderScrolled(true); // Also update React state for component's own class\n      } else {\n        document.body.classList.remove('scrolled');\n        setHeaderScrolled(false); // Also update React state\n      }\n    };\n\n    window.addEventListener('scroll', toggleScrolled);\n    window.addEventListener('load', toggleScrolled); // For initial load check\n\n    // Cleanup: remove event listeners when component unmounts\n    return () => {\n      window.removeEventListener('scroll', toggleScrolled);\n      window.removeEventListener('load', toggleScrolled);\n    };\n  }, []); // Empty dependency array means this runs once on mount\n\n  // --- Mobile Navigation Toggle ---\n  const toggleMobileNav = () => {\n    // Toggle the mobileNavOpen state\n    setMobileNavOpen(prev => !prev);\n  };\n\n  // Effect to apply/remove 'mobile-nav-active' class on body\n  useEffect(() => {\n    if (mobileNavOpen) {\n      document.body.classList.add('mobile-nav-active');\n      // If using bi-list and bi-x, ensure toggle button reflects state\n      if (mobileNavToggleBtnRef.current) {\n        mobileNavToggleBtnRef.current.classList.remove('bi-list');\n        mobileNavToggleBtnRef.current.classList.add('bi-x');\n      }\n    } else {\n      document.body.classList.remove('mobile-nav-active');\n      if (mobileNavToggleBtnRef.current) {\n        mobileNavToggleBtnRef.current.classList.remove('bi-x');\n        mobileNavToggleBtnRef.current.classList.add('bi-list');\n      }\n    }\n  }, [mobileNavOpen]); // Re-run when mobileNavOpen state changes\n\n  // --- Hide mobile nav on same-page/hash links (or any link click) ---\n  const closeMobileNav = () => {\n    if (mobileNavOpen) {\n      setMobileNavOpen(false); // Close the mobile nav\n    }\n  };\n\n\n  // --- Navmenu Scrollspy ---\n  useEffect(() => {\n    const navmenuScrollspy = () => {\n      // Select all nav links inside the navmenu\n      const navmenulinks = document.querySelectorAll('#navmenu a[href^=\"#\"]'); // Only target hash links\n\n      navmenulinks.forEach(navmenulink => {\n        const hash = navmenulink.hash;\n        if (!hash) return; // Skip links without a hash\n\n        const section = document.querySelector(hash);\n        if (!section) return; // Skip if section doesn't exist\n\n        const position = window.scrollY + 200; // Offset for header height\n\n        if (position >= section.offsetTop && position < (section.offsetTop + section.offsetHeight)) {\n          // If the section is in view, add 'active' class to its corresponding nav link\n          // First, remove 'active' from all other nav links\n          document.querySelectorAll('#navmenu a').forEach(link => {\n            if (link !== navmenulink) { // Don't remove if it's the current active one\n              link.classList.remove('active');\n            }\n          });\n          navmenulink.classList.add('active');\n        } else {\n          // If the section is not in view, remove 'active' class\n          navmenulink.classList.remove('active');\n        }\n      });\n\n      // Special handling for the root path if no specific section is active\n      if (location.pathname === '/' && window.scrollY < 200) { // Adjust value as needed\n        const homeLink = document.querySelector('.navmenu a[href=\"/\"]');\n        if (homeLink) {\n          document.querySelectorAll('.navmenu a').forEach(link => link.classList.remove('active'));\n          homeLink.classList.add('active');\n        }\n      }\n    };\n\n    window.addEventListener('load', navmenuScrollspy);\n    document.addEventListener('scroll', navmenuScrollspy);\n\n    // Cleanup: remove event listeners\n    return () => {\n      window.removeEventListener('load', navmenuScrollspy);\n      document.removeEventListener('scroll', navmenuScrollspy);\n    };\n  }, [location.pathname]); // Re-run if path changes (e.g., navigating directly)\n\n\nreturn (\n    <header ref={headerRef} className={`header ${headerScrolled ? 'scrolled' : ''}`}>\n      <div className=\"header-container\">\n        <Link to=\"/\" className=\"logo\" onClick={closeMobileNav}>\n          <img src=\"/assets/img/logo.png\" alt=\"logo\" />\n        </Link>\n\n        <nav className={`navmenu ${mobileNavOpen ? 'open' : ''}`}>\n          <ul>\n            <li><Link to=\"/\" className={location.pathname === '/' ? 'active' : ''}>Home</Link></li>\n            <li><Link to=\"/contact\" className={location.pathname === '/contact' ? 'active' : ''}>Contact</Link></li>\n            {user ? (\n                            <>\n                <li><Link to=\"/profile\" className={location.pathname === '/profile' ? 'active' : ''}>Profile</Link></li>\n                <li>\n                  <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n                </li>\n              </>\n            ) : (\n              <li><Link to=\"/auth?mode=login\" className={location.pathname === '/auth' ? 'active' : ''}>Login</Link></li>\n            )}\n          </ul>\n          <i\n            ref={mobileNavToggleBtnRef}\n            className={`mobile-nav-toggle ${mobileNavOpen ? 'open' : ''}`}\n            onClick={toggleMobileNav}\n          >\n            â˜°\n          </i>\n        </nav>\n      </div>\n    </header>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}