{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, signOut, reload, onAuthStateChanged } from \"firebase/auth\";\nimport { getDoc, doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AuthForm() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [userRole, setUserRole] = useState('user');\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  // Detect current user (session management)\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsub();\n  }, []);\n  useEffect(() => {\n    if (user) {\n      getDoc(doc(db, \"users\", user.uid)).then(userDoc => {\n        if (userDoc.exists()) {\n          setUserRole(userDoc.data().role);\n        } else {\n          setUserRole(null);\n        }\n      });\n    } else {\n      setUserRole(null);\n    }\n  }, [user]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n  };\n  // Email input onChange handler\n  const handleEmailChange = e => {\n    const value = e.target.value;\n    setForm({\n      ...form,\n      email: value\n    });\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(value)) {\n      setEmailError(\"Please enter a valid email address.\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  // Password input onChange handler\n  const handlePasswordChange = e => {\n    const value = e.target.value;\n    setForm({\n      ...form,\n      password: value\n    });\n    if (value.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters long.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    if (isLogin) {\n      // Login mode\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, form.email, form.password);\n        const user = userCredential.user;\n\n        // Fetch user role from Firestore\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\n        if (userDoc.exists()) {\n          const role = userDoc.data().role;\n          setUserRole(role); // <-- Save role in state for access control\n        } else {\n          setUserRole(null); // Or handle missing user doc\n        }\n        setMessage(\"Logged in successfully!\");\n      } catch (err) {\n        setError(\"Invalid credentials. Please try again.\");\n      }\n    } else {\n      // Sign up mode\n      try {\n        const usersRef = collection(db, \"users\");\n        const q = query(usersRef, where(\"email\", \"==\", form.email));\n        const querySnapshot = await getDocs(q);\n        if (!querySnapshot.empty) {\n          setError(\"Email already exists in the database.\");\n          return; // Don't create user doc\n        }\n        const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n        await sendEmailVerification(userCredential.user);\n        setUser(userCredential.user);\n        setMessage(\"Verification email sent! Please check your email.\");\n        setCheckingVerification(true);\n\n        // Start polling for verification\n        const interval = setInterval(async () => {\n          await reload(userCredential.user);\n          if (userCredential.user.emailVerified) {\n            clearInterval(interval);\n\n            // Save user info in Firestore\n            await setDoc(doc(db, \"users\", userCredential.user.uid), {\n              firstName: form.firstName,\n              lastName: form.lastName,\n              email: userCredential.user.email,\n              role: 'user',\n              createdAt: serverTimestamp()\n            });\n            setMessage(\"Email verified! Your account is now active.\");\n            setCheckingVerification(false);\n          }\n        }, 3000);\n      } catch (err) {\n        setError(\"This email is already registered or invalid.\");\n      }\n    }\n  };\n  const handleLogout = async () => {\n    await signOut(auth);\n    setUserRole(null);\n    setMessage(\"You have been logged out.\");\n  };\n\n  // Determine if form is valid (no errors and inputs not empty)\n  const isFormValid = form.email && !emailError && form.password && !passwordError && (\n  // If sign up, also check first and last name:\n  isLogin || form.firstName && form.lastName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? \"Log in\" : \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          value: form.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          value: form.lastName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleEmailChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handlePasswordChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${isLogin ? \"signup\" : \"login\"}`,\n          children: isLogin ? \"Create new user\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isFormValid,\n          children: isLogin ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }, this), checkingVerification && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for email verification...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n// import { Form, Link, useSearchParams } from 'react-router-dom';\n\n// import classes from './AuthForm.module.css';\n\n// function AuthForm() {\n\n//   const [searchParams] = useSearchParams();\n//   const isLogin = searchParams.get('mode') === 'login';\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n//         <p>\n//           <label htmlFor=\"email\">Email</label>\n//           <input id=\"email\" type=\"email\" name=\"email\" required />\n//         </p>\n//         <p>\n//           <label htmlFor=\"image\">Password</label>\n//           <input id=\"password\" type=\"password\" name=\"password\" required />\n//         </p>\n//         <div className={classes.actions}>\n//           <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n//             {isLogin ? 'Create new user' : 'Login'}\n//           </Link>\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n_s(AuthForm, \"I3bVV0xYA4jyApnB0qlFZXIMjxQ=\", false, function () {\n  return [useSearchParams];\n});\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","Link","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","reload","onAuthStateChanged","getDoc","doc","setDoc","serverTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","searchParams","isLogin","get","form","setForm","firstName","lastName","email","password","message","setMessage","emailError","setEmailError","passwordError","setPasswordError","userRole","setUserRole","error","setError","user","setUser","checkingVerification","setCheckingVerification","unsub","currentUser","uid","then","userDoc","exists","data","role","handleChange","e","target","name","value","handleEmailChange","emailRegex","test","handlePasswordChange","length","handleSubmit","preventDefault","userCredential","err","usersRef","collection","q","query","where","querySnapshot","getDocs","empty","interval","setInterval","emailVerified","clearInterval","createdAt","handleLogout","isFormValid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","required","to","disabled","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/AuthForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendEmailVerification,\n  signOut,\n  reload,\n  onAuthStateChanged\n} from \"firebase/auth\";\nimport { getDoc, doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\n\nexport default function AuthForm() {\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n\n  const [form, setForm] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [userRole, setUserRole] = useState('user');\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  // Detect current user (session management)\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n    return () => unsub();\n  }, []);\n\nuseEffect(() => {\n  if (user) {\n    getDoc(doc(db, \"users\", user.uid)).then(userDoc => {\n      if (userDoc.exists()) {\n        setUserRole(userDoc.data().role);\n      } else {\n        setUserRole(null);\n      }\n    });\n  } else {\n    setUserRole(null);\n  }\n}, [user]);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setError(\"\");\n  };\n  // Email input onChange handler\n  const handleEmailChange = (e) => {\n    const value = e.target.value;\n    setForm({ ...form, email: value });\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(value)) {\n      setEmailError(\"Please enter a valid email address.\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  // Password input onChange handler\n  const handlePasswordChange = (e) => {\n    const value = e.target.value;\n    setForm({ ...form, password: value });\n\n    if (value.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters long.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n\n    if (isLogin) {\n      // Login mode\n      try {\n            const userCredential = await signInWithEmailAndPassword(auth, form.email, form.password);\n            const user = userCredential.user;\n\n            // Fetch user role from Firestore\n            const userDoc = await getDoc(doc(db, \"users\", user.uid));\n            if (userDoc.exists()) {\n              const role = userDoc.data().role;\n              setUserRole(role);  // <-- Save role in state for access control\n            } else {\n              setUserRole(null);  // Or handle missing user doc\n            }\n\n        setMessage(\"Logged in successfully!\");\n      } catch (err) {\n        setError(\"Invalid credentials. Please try again.\");\n      }\n    } else {\n      // Sign up mode\n      try {\n        const usersRef = collection(db, \"users\");\nconst q = query(usersRef, where(\"email\", \"==\", form.email));\nconst querySnapshot = await getDocs(q);\n\nif (!querySnapshot.empty) {\n  setError(\"Email already exists in the database.\");\n  return; // Don't create user doc\n}\n\n        const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n        await sendEmailVerification(userCredential.user);\n        setUser(userCredential.user);\n\n        setMessage(\"Verification email sent! Please check your email.\");\n        setCheckingVerification(true);\n\n        // Start polling for verification\n        const interval = setInterval(async () => {\n          await reload(userCredential.user);\n          if (userCredential.user.emailVerified) {\n            clearInterval(interval);\n\n            // Save user info in Firestore\n            await setDoc(doc(db, \"users\", userCredential.user.uid), {\n              firstName: form.firstName,\n              lastName: form.lastName,\n              email: userCredential.user.email,\n              role: 'user',\n              createdAt: serverTimestamp(),\n            });\n\n            setMessage(\"Email verified! Your account is now active.\");\n            setCheckingVerification(false);\n          }\n        }, 3000);\n      } catch (err) {\n        setError(\"This email is already registered or invalid.\");\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await signOut(auth);\n    setUserRole(null);\n    setMessage(\"You have been logged out.\");\n  };\n\n    // Determine if form is valid (no errors and inputs not empty)\n  const isFormValid = \n    form.email && !emailError &&\n    form.password && !passwordError &&\n    // If sign up, also check first and last name:\n    (isLogin || (form.firstName && form.lastName));\n\n  return (\n    <div className=\"auth-container\">\n      {user ? (\n        <div>\n          <h2>Welcome, {user.email}</h2>\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <h2>{isLogin ? \"Log in\" : \"Create a new user\"}</h2>\n\n          {!isLogin && (\n            <>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={form.firstName}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={form.lastName}\n                onChange={handleChange}\n                required\n              />\n            </>\n          )}\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={form.email}\n            onChange={handleEmailChange}\n            required\n          />\n          {emailError && <p className=\"error\">{emailError}</p>}\n\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={form.password}\n            onChange={handlePasswordChange}\n            required\n          />\n      {passwordError && <p className=\"error\">{passwordError}</p>}\n\n          <div className=\"auth-actions\">\n            <Link to={`?mode=${isLogin ? \"signup\" : \"login\"}`}>\n              {isLogin ? \"Create new user\" : \"Login\"}\n            </Link>\n            <button type=\"submit\" disabled={!isFormValid}>{isLogin ? \"Login\" : \"Sign Up\"}</button>\n          </div>\n        </form>\n      )}\n\n      {message && <p className=\"message\">{message}</p>}\n      {checkingVerification && <p>Waiting for email verification...</p>}\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n\n\n\n\n\n// import { Form, Link, useSearchParams } from 'react-router-dom';\n\n// import classes from './AuthForm.module.css';\n\n// function AuthForm() {\n\n//   const [searchParams] = useSearchParams();\n//   const isLogin = searchParams.get('mode') === 'login';\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n//         <p>\n//           <label htmlFor=\"email\">Email</label>\n//           <input id=\"email\" type=\"email\" name=\"email\" required />\n//         </p>\n//         <p>\n//           <label htmlFor=\"image\">Password</label>\n//           <input id=\"password\" type=\"password\" name=\"password\" required />\n//         </p>\n//         <div className={classes.actions}>\n//           <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n//             {isLogin ? 'Create new user' : 'Login'}\n//           </Link>\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,IAAI,QAAQ,kBAAkB;AACxD,SAASC,IAAI,EAAEC,EAAE,QAAQ,YAAY;AACrC,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,qBAAqB,EACrBC,OAAO,EACPC,MAAM,EACNC,kBAAkB,QACb,eAAe;AACtB,SAASC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AACzE,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,CAAC,GAAGpB,eAAe,CAAC,CAAC;EACxC,MAAMqB,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC,KAAK,OAAO;EAEpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC;IAAE2B,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC1F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,MAAM,CAAC;EAChD,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyC,IAAI,EAAEC,OAAO,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC2C,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACAC,SAAS,CAAC,MAAM;IACd,MAAM4C,KAAK,GAAGlC,kBAAkB,CAACP,IAAI,EAAG0C,WAAW,IAAK;MACtDJ,OAAO,CAACI,WAAW,CAAC;IACtB,CAAC,CAAC;IACF,OAAO,MAAMD,KAAK,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAER5C,SAAS,CAAC,MAAM;IACd,IAAIwC,IAAI,EAAE;MACR7B,MAAM,CAACC,GAAG,CAACR,EAAE,EAAE,OAAO,EAAEoC,IAAI,CAACM,GAAG,CAAC,CAAC,CAACC,IAAI,CAACC,OAAO,IAAI;QACjD,IAAIA,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;UACpBZ,WAAW,CAACW,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC;QAClC,CAAC,MAAM;UACLd,WAAW,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLA,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,CAACG,IAAI,CAAC,CAAC;EAER,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1B5B,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAAC6B,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;IACrDjB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EACD;EACA,MAAMkB,iBAAiB,GAAIJ,CAAC,IAAK;IAC/B,MAAMG,KAAK,GAAGH,CAAC,CAACC,MAAM,CAACE,KAAK;IAC5B/B,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEI,KAAK,EAAE4B;IAAM,CAAC,CAAC;IAElC,MAAME,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MAC3BvB,aAAa,CAAC,qCAAqC,CAAC;IACtD,CAAC,MAAM;MACLA,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM2B,oBAAoB,GAAIP,CAAC,IAAK;IAClC,MAAMG,KAAK,GAAGH,CAAC,CAACC,MAAM,CAACE,KAAK;IAC5B/B,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEK,QAAQ,EAAE2B;IAAM,CAAC,CAAC;IAErC,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MACpB1B,gBAAgB,CAAC,8CAA8C,CAAC;IAClE,CAAC,MAAM;MACLA,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EACD,MAAM2B,YAAY,GAAG,MAAOT,CAAC,IAAK;IAChCA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClBhC,UAAU,CAAC,EAAE,CAAC;IACdQ,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAIjB,OAAO,EAAE;MACX;MACA,IAAI;QACE,MAAM0C,cAAc,GAAG,MAAM1D,0BAA0B,CAACH,IAAI,EAAEqB,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACK,QAAQ,CAAC;QACxF,MAAMW,IAAI,GAAGwB,cAAc,CAACxB,IAAI;;QAEhC;QACA,MAAMQ,OAAO,GAAG,MAAMrC,MAAM,CAACC,GAAG,CAACR,EAAE,EAAE,OAAO,EAAEoC,IAAI,CAACM,GAAG,CAAC,CAAC;QACxD,IAAIE,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;UACpB,MAAME,IAAI,GAAGH,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI;UAChCd,WAAW,CAACc,IAAI,CAAC,CAAC,CAAE;QACtB,CAAC,MAAM;UACLd,WAAW,CAAC,IAAI,CAAC,CAAC,CAAE;QACtB;QAEJN,UAAU,CAAC,yBAAyB,CAAC;MACvC,CAAC,CAAC,OAAOkC,GAAG,EAAE;QACZ1B,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF,CAAC,MAAM;MACL;MACA,IAAI;QACF,MAAM2B,QAAQ,GAAGC,UAAU,CAAC/D,EAAE,EAAE,OAAO,CAAC;QAChD,MAAMgE,CAAC,GAAGC,KAAK,CAACH,QAAQ,EAAEI,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE9C,IAAI,CAACI,KAAK,CAAC,CAAC;QAC3D,MAAM2C,aAAa,GAAG,MAAMC,OAAO,CAACJ,CAAC,CAAC;QAEtC,IAAI,CAACG,aAAa,CAACE,KAAK,EAAE;UACxBlC,QAAQ,CAAC,uCAAuC,CAAC;UACjD,OAAO,CAAC;QACV;QAEQ,MAAMyB,cAAc,GAAG,MAAM3D,8BAA8B,CAACF,IAAI,EAAEqB,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACK,QAAQ,CAAC;QAC5F,MAAMtB,qBAAqB,CAACyD,cAAc,CAACxB,IAAI,CAAC;QAChDC,OAAO,CAACuB,cAAc,CAACxB,IAAI,CAAC;QAE5BT,UAAU,CAAC,mDAAmD,CAAC;QAC/DY,uBAAuB,CAAC,IAAI,CAAC;;QAE7B;QACA,MAAM+B,QAAQ,GAAGC,WAAW,CAAC,YAAY;UACvC,MAAMlE,MAAM,CAACuD,cAAc,CAACxB,IAAI,CAAC;UACjC,IAAIwB,cAAc,CAACxB,IAAI,CAACoC,aAAa,EAAE;YACrCC,aAAa,CAACH,QAAQ,CAAC;;YAEvB;YACA,MAAM7D,MAAM,CAACD,GAAG,CAACR,EAAE,EAAE,OAAO,EAAE4D,cAAc,CAACxB,IAAI,CAACM,GAAG,CAAC,EAAE;cACtDpB,SAAS,EAAEF,IAAI,CAACE,SAAS;cACzBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;cACvBC,KAAK,EAAEoC,cAAc,CAACxB,IAAI,CAACZ,KAAK;cAChCuB,IAAI,EAAE,MAAM;cACZ2B,SAAS,EAAEhE,eAAe,CAAC;YAC7B,CAAC,CAAC;YAEFiB,UAAU,CAAC,6CAA6C,CAAC;YACzDY,uBAAuB,CAAC,KAAK,CAAC;UAChC;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACZ1B,QAAQ,CAAC,8CAA8C,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAMwC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMvE,OAAO,CAACL,IAAI,CAAC;IACnBkC,WAAW,CAAC,IAAI,CAAC;IACjBN,UAAU,CAAC,2BAA2B,CAAC;EACzC,CAAC;;EAEC;EACF,MAAMiD,WAAW,GACfxD,IAAI,CAACI,KAAK,IAAI,CAACI,UAAU,IACzBR,IAAI,CAACK,QAAQ,IAAI,CAACK,aAAa;EAC/B;EACCZ,OAAO,IAAKE,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACG,QAAS,CAAC;EAEhD,oBACEX,OAAA;IAAKiE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC5B1C,IAAI,gBACHxB,OAAA;MAAAkE,QAAA,gBACElE,OAAA;QAAAkE,QAAA,GAAI,WAAS,EAAC1C,IAAI,CAACZ,KAAK;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9BtE,OAAA;QAAQuE,OAAO,EAAER,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAENtE,OAAA;MAAMwE,QAAQ,EAAE1B,YAAa;MAACmB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjDlE,OAAA;QAAAkE,QAAA,EAAK5D,OAAO,GAAG,QAAQ,GAAG;MAAmB;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAElD,CAAChE,OAAO,iBACPN,OAAA,CAAAE,SAAA;QAAAgE,QAAA,gBACElE,OAAA;UACEyE,IAAI,EAAC,MAAM;UACXlC,IAAI,EAAC,WAAW;UAChBmC,WAAW,EAAC,YAAY;UACxBlC,KAAK,EAAEhC,IAAI,CAACE,SAAU;UACtBiE,QAAQ,EAAEvC,YAAa;UACvBwC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFtE,OAAA;UACEyE,IAAI,EAAC,MAAM;UACXlC,IAAI,EAAC,UAAU;UACfmC,WAAW,EAAC,WAAW;UACvBlC,KAAK,EAAEhC,IAAI,CAACG,QAAS;UACrBgE,QAAQ,EAAEvC,YAAa;UACvBwC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA,eACF,CACH,eAEDtE,OAAA;QACEyE,IAAI,EAAC,OAAO;QACZlC,IAAI,EAAC,OAAO;QACZmC,WAAW,EAAC,OAAO;QACnBlC,KAAK,EAAEhC,IAAI,CAACI,KAAM;QAClB+D,QAAQ,EAAElC,iBAAkB;QAC5BmC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACDtD,UAAU,iBAAIhB,OAAA;QAAGiE,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAElD;MAAU;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpDtE,OAAA;QACEyE,IAAI,EAAC,UAAU;QACflC,IAAI,EAAC,UAAU;QACfmC,WAAW,EAAC,UAAU;QACtBlC,KAAK,EAAEhC,IAAI,CAACK,QAAS;QACrB8D,QAAQ,EAAE/B,oBAAqB;QAC/BgC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACLpD,aAAa,iBAAIlB,OAAA;QAAGiE,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEhD;MAAa;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEtDtE,OAAA;QAAKiE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BlE,OAAA,CAACd,IAAI;UAAC2F,EAAE,EAAE,SAASvE,OAAO,GAAG,QAAQ,GAAG,OAAO,EAAG;UAAA4D,QAAA,EAC/C5D,OAAO,GAAG,iBAAiB,GAAG;QAAO;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACPtE,OAAA;UAAQyE,IAAI,EAAC,QAAQ;UAACK,QAAQ,EAAE,CAACd,WAAY;UAAAE,QAAA,EAAE5D,OAAO,GAAG,OAAO,GAAG;QAAS;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP,EAEAxD,OAAO,iBAAId,OAAA;MAAGiE,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEpD;IAAO;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/C5C,oBAAoB,iBAAI1B,OAAA;MAAAkE,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChEhD,KAAK,iBAAItB,OAAA;MAAGiE,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAE5C;IAAK;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;;AAMA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAlE,EAAA,CAvPwBD,QAAQ;EAAA,QACPlB,eAAe;AAAA;AAAA8F,EAAA,GADhB5E,QAAQ;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}