{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/pages/Signup/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification, reload } from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n      setUser(userCredential.user);\n      await sendEmailVerification(userCredential.user);\n      setMessage(\"Verification email sent! Please check your email and click the verification link.\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Poll for email verification\n  useEffect(() => {\n    if (!user) return;\n    setCheckingVerification(true);\n    const interval = setInterval(async () => {\n      await reload(user); // reload user info from Firebase\n      if (user.emailVerified) {\n        clearInterval(interval);\n\n        // Save user info in Firestore\n        try {\n          await setDoc(doc(db, \"users\", user.uid), {\n            firstName: form.firstName,\n            lastName: form.lastName,\n            email: user.email,\n            createdAt: serverTimestamp()\n          });\n          setMessage(\"Email verified! Your account is now fully registered.\");\n          setCheckingVerification(false);\n          setUser(null); // reset to stop polling\n        } catch (err) {\n          setError(\"Failed to save user data: \" + err.message);\n        }\n      }\n    }, 3000); // check every 3 seconds\n\n    // Clean up interval on unmount or when user changes\n    return () => clearInterval(interval);\n  }, [user, form.firstName, form.lastName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: form.firstName,\n        onChange: handleChange,\n        required: true,\n        disabled: user !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: form.lastName,\n        onChange: handleChange,\n        required: true,\n        disabled: user !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleChange,\n        required: true,\n        disabled: user !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true,\n        disabled: user !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: user !== null,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }, this), checkingVerification && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for email verification...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"t5HWVZYzvVJH1zJ2BDJpq79fZzE=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","createUserWithEmailAndPassword","sendEmailVerification","reload","doc","setDoc","serverTimestamp","jsxDEV","_jsxDEV","SignUp","_s","form","setForm","firstName","lastName","email","password","message","setMessage","error","setError","user","setUser","checkingVerification","setCheckingVerification","handleChange","e","target","name","value","handleSubmit","preventDefault","userCredential","err","interval","setInterval","emailVerified","clearInterval","uid","createdAt","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/pages/Signup/Signup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification, reload } from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\n\nexport default function SignUp() {\n  const [form, setForm] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setError(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n      setUser(userCredential.user);\n\n      await sendEmailVerification(userCredential.user);\n\n      setMessage(\n        \"Verification email sent! Please check your email and click the verification link.\"\n      );\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Poll for email verification\n  useEffect(() => {\n    if (!user) return;\n\n    setCheckingVerification(true);\n    const interval = setInterval(async () => {\n      await reload(user);  // reload user info from Firebase\n      if (user.emailVerified) {\n        clearInterval(interval);\n\n        // Save user info in Firestore\n        try {\n          await setDoc(doc(db, \"users\", user.uid), {\n            firstName: form.firstName,\n            lastName: form.lastName,\n            email: user.email,\n            createdAt: serverTimestamp(),\n          });\n          setMessage(\"Email verified! Your account is now fully registered.\");\n          setCheckingVerification(false);\n          setUser(null); // reset to stop polling\n        } catch (err) {\n          setError(\"Failed to save user data: \" + err.message);\n        }\n      }\n    }, 3000); // check every 3 seconds\n\n    // Clean up interval on unmount or when user changes\n    return () => clearInterval(interval);\n  }, [user, form.firstName, form.lastName]);\n\n  return (\n    <div className=\"auth-container\">\n      <form onSubmit={handleSubmit} className=\"auth-form\">\n        <h2>Sign Up</h2>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          placeholder=\"First Name\"\n          value={form.firstName}\n          onChange={handleChange}\n          required\n          disabled={user !== null}\n        />\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"Last Name\"\n          value={form.lastName}\n          onChange={handleChange}\n          required\n          disabled={user !== null}\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={handleChange}\n          required\n          disabled={user !== null}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={handleChange}\n          required\n          disabled={user !== null}\n        />\n        <button type=\"submit\" disabled={user !== null}>Sign Up</button>\n      </form>\n\n      {message && <p className=\"message\">{message}</p>}\n      {checkingVerification && <p>Waiting for email verification...</p>}\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}