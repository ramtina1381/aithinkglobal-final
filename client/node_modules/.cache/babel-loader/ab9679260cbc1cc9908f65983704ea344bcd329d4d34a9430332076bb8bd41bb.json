{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, signOut, reload, onAuthStateChanged } from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AuthForm() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  // Detect current user (session management)\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsub();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    if (isLogin) {\n      // Login mode\n      try {\n        await signInWithEmailAndPassword(auth, form.email, form.password);\n        setMessage(\"Logged in successfully!\");\n      } catch (err) {\n        console.error(\"Login error:\", err.code, err.message);\n        switch (err.code) {\n          case \"auth/invalid-email\":\n            setError(\"Please enter a valid email address.\");\n            break;\n          case \"auth/user-not-found\":\n            setError(\"No account found with this email. Please sign up first.\");\n            break;\n          case \"auth/wrong-password\":\n            setError(\"Incorrect password. Please try again.\");\n            break;\n          default:\n            setError(\"Failed to log in. Please check your credentials and try again.\");\n            break;\n        }\n      }\n    } else {\n      // Sign up mode\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n        await sendEmailVerification(userCredential.user);\n        setUser(userCredential.user);\n        setMessage(\"Verification email sent! Please check your email.\");\n        setCheckingVerification(true);\n\n        // Start polling for verification\n        const interval = setInterval(async () => {\n          await reload(userCredential.user);\n          if (userCredential.user.emailVerified) {\n            clearInterval(interval);\n\n            // Save user info in Firestore\n            await setDoc(doc(db, \"users\", userCredential.user.uid), {\n              firstName: form.firstName,\n              lastName: form.lastName,\n              email: userCredential.user.email,\n              createdAt: serverTimestamp()\n            });\n            setMessage(\"Email verified! Your account is now active.\");\n            setCheckingVerification(false);\n          }\n        }, 3000);\n      } catch (err) {\n        console.error(\"Sign up error:\", err.code, err.message);\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n            setError(\"This email is already registered. Please log in instead.\");\n            break;\n          case \"auth/invalid-email\":\n            setError(\"Please enter a valid email address.\");\n            break;\n          case \"auth/weak-password\":\n            setError(\"Password should be at least 6 characters long.\");\n            break;\n          default:\n            setError(\"Something went wrong while creating your account. Please try again.\");\n            break;\n        }\n      }\n    }\n  };\n  const handleLogout = async () => {\n    await signOut(auth);\n    setMessage(\"You have been logged out.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? \"Log in\" : \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          value: form.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          value: form.lastName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${isLogin ? \"signup\" : \"login\"}`,\n          children: isLogin ? \"Create new user\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }, this), checkingVerification && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for email verification...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 32\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n// import { Form, Link, useSearchParams } from 'react-router-dom';\n\n// import classes from './AuthForm.module.css';\n\n// function AuthForm() {\n\n//   const [searchParams] = useSearchParams();\n//   const isLogin = searchParams.get('mode') === 'login';\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n//         <p>\n//           <label htmlFor=\"email\">Email</label>\n//           <input id=\"email\" type=\"email\" name=\"email\" required />\n//         </p>\n//         <p>\n//           <label htmlFor=\"image\">Password</label>\n//           <input id=\"password\" type=\"password\" name=\"password\" required />\n//         </p>\n//         <div className={classes.actions}>\n//           <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n//             {isLogin ? 'Create new user' : 'Login'}\n//           </Link>\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n_s(AuthForm, \"TQKbWuJfcOR0+0PwQcu6yraM7O0=\", false, function () {\n  return [useSearchParams];\n});\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","Link","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","reload","onAuthStateChanged","doc","setDoc","serverTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","searchParams","isLogin","get","form","setForm","firstName","lastName","email","password","message","setMessage","error","setError","user","setUser","checkingVerification","setCheckingVerification","unsub","currentUser","handleChange","e","target","name","value","handleSubmit","preventDefault","err","console","code","userCredential","interval","setInterval","emailVerified","clearInterval","uid","createdAt","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","required","to","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/components/AuthForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendEmailVerification,\n  signOut,\n  reload,\n  onAuthStateChanged\n} from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport \"./Auth.css\";\n\nexport default function AuthForm() {\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n\n  const [form, setForm] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [checkingVerification, setCheckingVerification] = useState(false);\n\n  // Detect current user (session management)\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n    return () => unsub();\n  }, []);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setError(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n\n    if (isLogin) {\n      // Login mode\n      try {\n        await signInWithEmailAndPassword(auth, form.email, form.password);\n        setMessage(\"Logged in successfully!\");\n      } catch (err) {\n          console.error(\"Login error:\", err.code, err.message);\n\n          switch (err.code) {\n            case \"auth/invalid-email\":\n              setError(\"Please enter a valid email address.\");\n              break;\n            case \"auth/user-not-found\":\n              setError(\"No account found with this email. Please sign up first.\");\n              break;\n            case \"auth/wrong-password\":\n              setError(\"Incorrect password. Please try again.\");\n              break;\n            default:\n              setError(\"Failed to log in. Please check your credentials and try again.\");\n              break;\n          }\n      }\n    } else {\n      // Sign up mode\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n        await sendEmailVerification(userCredential.user);\n        setUser(userCredential.user);\n\n        setMessage(\"Verification email sent! Please check your email.\");\n        setCheckingVerification(true);\n\n        // Start polling for verification\n        const interval = setInterval(async () => {\n          await reload(userCredential.user);\n          if (userCredential.user.emailVerified) {\n            clearInterval(interval);\n\n            // Save user info in Firestore\n            await setDoc(doc(db, \"users\", userCredential.user.uid), {\n              firstName: form.firstName,\n              lastName: form.lastName,\n              email: userCredential.user.email,\n              createdAt: serverTimestamp(),\n            });\n\n            setMessage(\"Email verified! Your account is now active.\");\n            setCheckingVerification(false);\n          }\n        }, 3000);\n      } catch (err) {\n          console.error(\"Sign up error:\", err.code, err.message);\n\n          switch (err.code) {\n            case \"auth/email-already-in-use\":\n              setError(\"This email is already registered. Please log in instead.\");\n              break;\n            case \"auth/invalid-email\":\n              setError(\"Please enter a valid email address.\");\n              break;\n            case \"auth/weak-password\":\n              setError(\"Password should be at least 6 characters long.\");\n              break;\n            default:\n              setError(\"Something went wrong while creating your account. Please try again.\");\n              break;\n          }\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await signOut(auth);\n    setMessage(\"You have been logged out.\");\n  };\n\n  return (\n    <div className=\"auth-container\">\n      {user ? (\n        <div>\n          <h2>Welcome, {user.email}</h2>\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <h2>{isLogin ? \"Log in\" : \"Create a new user\"}</h2>\n\n          {!isLogin && (\n            <>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={form.firstName}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={form.lastName}\n                onChange={handleChange}\n                required\n              />\n            </>\n          )}\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={form.email}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={form.password}\n            onChange={handleChange}\n            required\n          />\n\n          <div className=\"auth-actions\">\n            <Link to={`?mode=${isLogin ? \"signup\" : \"login\"}`}>\n              {isLogin ? \"Create new user\" : \"Login\"}\n            </Link>\n            <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\n          </div>\n        </form>\n      )}\n\n      {message && <p className=\"message\">{message}</p>}\n      {checkingVerification && <p>Waiting for email verification...</p>}\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n\n\n\n\n\n// import { Form, Link, useSearchParams } from 'react-router-dom';\n\n// import classes from './AuthForm.module.css';\n\n// function AuthForm() {\n\n//   const [searchParams] = useSearchParams();\n//   const isLogin = searchParams.get('mode') === 'login';\n//   return (\n//     <>\n//       <Form method=\"post\" className={classes.form}>\n//         <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n//         <p>\n//           <label htmlFor=\"email\">Email</label>\n//           <input id=\"email\" type=\"email\" name=\"email\" required />\n//         </p>\n//         <p>\n//           <label htmlFor=\"image\">Password</label>\n//           <input id=\"password\" type=\"password\" name=\"password\" required />\n//         </p>\n//         <div className={classes.actions}>\n//           <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n//             {isLogin ? 'Create new user' : 'Login'}\n//           </Link>\n//           <button>Save</button>\n//         </div>\n//       </Form>\n//     </>\n//   );\n// }\n\n// export default AuthForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}