{"ast":null,"code":"var _jsxFileName = \"/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/pages/Signup/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport \"./Auth.css\";\nimport { serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, form.email, form.password);\n      await sendEmailVerification(userCredential.user);\n      setMessage(\"User successfully registered! Please check your email to verify your account.\");\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n  onAuthStateChanged(auth, async user => {\n    if (user) {\n      if (user.emailVerified) {\n        // Check if user data exists in Firestore\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\n        if (!userDoc.exists()) {\n          // Add user data here, maybe pull more info from the user or prompt\n          await setDoc(doc(db, \"users\", user.uid), {\n            email: user.email,\n            createdAt: serverTimestamp()\n            // You can also store firstName, lastName if you collect them later\n          });\n        }\n        // Allow access to app\n      } else {\n        alert(\"Please verify your email first!\");\n        await signOut(auth);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: form.firstName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: form.lastName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"6tLEAxkiB3gLMqntCPaGIgcLcAw=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","auth","db","createUserWithEmailAndPassword","sendEmailVerification","doc","setDoc","serverTimestamp","jsxDEV","_jsxDEV","SignUp","_s","form","setForm","firstName","lastName","email","password","message","setMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","userCredential","user","error","onAuthStateChanged","emailVerified","userDoc","getDoc","uid","exists","createdAt","alert","signOut","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/ramtinabolfazli/Documents/Work/AIThink/AIThinkFinal/aithinkglobal/client/src/pages/Signup/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport \"./Auth.css\";\nimport { serverTimestamp } from \"firebase/firestore\";\n\nexport default function SignUp() {\n  const [form, setForm] = useState({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        form.email,\n        form.password\n      );\n      await sendEmailVerification(userCredential.user);\n      setMessage(\"User successfully registered! Please check your email to verify your account.\");\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n  onAuthStateChanged(auth, async (user) => {\n  if (user) {\n    if (user.emailVerified) {\n      // Check if user data exists in Firestore\n      const userDoc = await getDoc(doc(db, \"users\", user.uid));\n      if (!userDoc.exists()) {\n        // Add user data here, maybe pull more info from the user or prompt\n        await setDoc(doc(db, \"users\", user.uid), {\n          email: user.email,\n          createdAt: serverTimestamp(),\n          // You can also store firstName, lastName if you collect them later\n        });\n      }\n      // Allow access to app\n    } else {\n      alert(\"Please verify your email first!\");\n      await signOut(auth);\n    }\n  }\n});\n\n  return (\n    <div className=\"auth-container\">\n      <form onSubmit={handleSubmit} className=\"auth-form\">\n        <h2>Sign Up</h2>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          placeholder=\"First Name\"\n          value={form.firstName}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"Last Name\"\n          value={form.lastName}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Sign Up</button>\n        {message && <p className=\"message\">{message}</p>}\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}